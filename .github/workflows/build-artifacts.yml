# This workflow builds Android and iOS SDK artifacts
name: Build Artifacts

on:
  pull_request:
    branches:
      - "main"
      - "develop"
  push:
    branches:
      - "main"

jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if version changed
        uses: EndBug/version-check@v1
        id: check

      - name: Use Node.js '16.15.0'
        uses: actions/setup-node@v2
        with:
          node-version: "16.15.0"
          cache: "npm"

      - run: npm ci

      # Android artifacts

      - name: Install Web3j
        run: curl -L get.web3j.io | sh && source ~/.web3j/source.sh

      - name: Generate Android artifacts
        run: npx ts-node ./scripts/android-artifacts.ts

      - name: Set up our JDK environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.11

      - name: Grant rights
        run: chmod +x java/build.gradle

      - name: Build jar
        working-directory: ./java
        run: gradle build

      # iOS artifacts
      - name: Generate iOS artifacts
        run: |
          mkdir ios
          npx ts-node ./scripts/ios-artifacts.ts

      # Upload Arifacts
      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v2
        if: github.event_name == 'push' && steps.check.outputs.changed == 'true'
        with:
          name: UPContractsAbi.swift
          path: ios/UPContractsAbi.swift

      - name: Upload Android Artifact
        uses: actions/upload-artifact@v2
        if: github.event_name == 'push'  && steps.check.outputs.changed == 'true'
        with:
          name: upcontracts.jar
          path: java/build/libs/upcontracts.jar

      # Trigger Release
      - name: Repository Dispatch
        if: github.event_name == 'push' && steps.check.outputs.changed == 'true'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
          event-type: trigger-release
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
